name: ü§ñ Release Build
on:
  push:
  pull_request:

jobs:
  build:
    name: ü§ñ Release Build ${{ matrix.platform }}
    # Only run the workflow if it's not a PR or if it's a PR from a fork.
    # This prevents duplicate workflows from running on PR's that originate
    # from the repository itself.
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
      GODOT_SILENCE_ROOT_WARNING: true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux, windows, mac]
    defaults:
      run:
        # Use bash shells on all platforms.
        shell: bash
    steps:
      - name: üßæ Checkout
        uses: actions/checkout@v4
        with:
          # If using git-lfs (large file storage), this ensures that your files
          # are checked out properly.
          lfs: false
          # Make sure any git submodules are checked out as well.
          submodules: 'recursive'

      - name: üíΩ Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          # Use the .NET SDK from global.json in the root of the repository.
          global-json-file: global.json

      - name: üì¶ Restore Dependencies
        run: dotnet restore

      - name: üíæ Install apt dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: binutils rsync xvfb
          version: 1.0

      - name: ü§ñ Setup Godot
        uses: chickensoft-games/setup-godot@v2
        with:
          # Version must include major, minor, and patch, and be >= 4.0.0
          # Pre-release label is optional.
          #
          # In this case, we are using the version from global.json.
          #
          # This allows checks on renovatebot PR's to succeed whenever
          # renovatebot updates the Godot SDK version.
          version: global.json
          cache: true
          # Use .NET-enabled version of Godot (the default is also true).
          use-dotnet: true
          # Include the Godot Export Templates (the default is false).
          include-templates: true

      - name: üî¨ Verify Setup
        run: |
          dotnet --version
          godot --version

      - name: üßë‚Äçüî¨ Generate .NET Bindings
        run: |
          dotnet tool install --global Chickensoft.GodotEnv
          export PATH="$PATH:/root/.dotnet/tools"
          godotenv addons install

      - name: ü¶∫ Build Projects
        run: |
          mkdir ${{ github.workspace }}/${{ matrix.platform }}
          godot -v --headless --export-release ${{ matrix.platform }} || exit 1
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Kyoukai Tansa - ${{ matrix.platform }}
          path: ${{ github.workspace }}/${{ matrix.platform }}
