name: 🤖 Build Snapshot
on:
  workflow_dispatch:

jobs:
  build:
    name: 🤖 Build Snapshot
    permissions:
      contents: write
    # Only run the workflow if it's not a PR or if it's a PR from a fork.
    # This prevents duplicate workflows from running on PR's that originate
    # from the repository itself.
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
      GODOT_SILENCE_ROOT_WARNING: true
    runs-on: ubuntu-latest
    defaults:
      run:
        # Use bash shells on all platforms.
        shell: bash
    steps:
      - name: 🧾 Checkout
        uses: actions/checkout@v4
        with:
          # If using git-lfs (large file storage), this ensures that your files
          # are checked out properly.
          lfs: false
          # Make sure any git submodules are checked out as well.
          submodules: 'recursive'

      - name: 💽 Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          # Use the .NET SDK from global.json in the root of the repository.
          global-json-file: godot/global.json

      - name: 📦 Restore Dependencies
        run: cd godot; dotnet restore

      - name: 💾 Install apt dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: binutils rsync xvfb wine64 unzip
          version: 1.0

      - name: 🧑‍🔬 Install addons
        run: |
          dotnet tool install --global Chickensoft.GodotEnv
          export PATH="$PATH:/root/.dotnet/tools"
          cd godot/
          godotenv addons install
          mkdir -p /tmp/godot-publish-dotnet/8031-ExportRelease-osx-x64

      - name: 🔬 Wine
        id: wine_install
        run: |
          echo "WINE_PATH=$(which wine64)" >> $GITHUB_OUTPUT

      - name: 🦺 Export game
        id: export
        uses: firebelley/godot-export@v6.0.0
        with:
          godot_executable_download_url: https://github.com/godotengine/godot/releases/download/4.4-stable/Godot_v4.4-stable_mono_linux_x86_64.zip
          godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/4.4-stable/Godot_v4.4-stable_mono_export_templates.tpz
          relative_project_path: ./godot/
          archive_output: false
          verbose: true
          cache: true
          presets_to_export: "windows, linux, mac"
          wine_path: ${{ steps.wine_install.outputs.WINE_PATH }}

      - name: 🔬 Extract short SHA
        run: |
          echo "SHORT_SHA=$("${{ github.sha }}".SubString(0, 8))" >> $env:GITHUB_ENV
        shell: pwsh

      - name: 🔬 Setup pnpm package manager
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: 🔬 Unzip releases
        run: |
          mkdir -p /tmp/release/windows
          mkdir -p /tmp/release/linux
          mkdir -p /tmp/release/mac
          mkdir -p /tmp/release/pckexplorer
          mkdir -p /tmp/release/treemaps/

          pnpm install -g webtreemap-cli
          wget https://github.com/DmitriySalnikov/GodotPCKExplorer/releases/download/1.5.3/GodotPCKExplorer_1.5.3_dotnet-ui-console-win-linux-mac.zip
          unzip GodotPCKExplorer_1.5.3_dotnet-ui-console-win-linux-mac.zip -d /tmp/release/pckexplorer

          unzip ${{ steps.export.outputs.build_directory }}/windows/AnkiTaiso.zip -d /tmp/release/windows/
          unzip ${{ steps.export.outputs.build_directory }}/linux/AnkiTaiso.zip -d /tmp/release/linux/
          unzip ${{ steps.export.outputs.build_directory }}/mac/AnkiTaiso.zip -d /tmp/release/mac/

      - name: 🧾 Generate Treemaps
        run: ./scripts/generate-treemaps.ps1
        shell: pwsh

      - name: 🦺 Upload Artifact Windows
        uses: actions/upload-artifact@v4
        with:
          name: AnkiTaiso-windows-${{ env.SHORT_SHA }}
          path: /tmp/release/windows/

      - name: 🦺 Upload Artifact Linux
        uses: actions/upload-artifact@v4
        with:
          name: AnkiTaiso-linux-${{ env.SHORT_SHA }}
          path: /tmp/release/linux/

      - name: 🦺 Upload Artifact Mac
        uses: actions/upload-artifact@v4
        with:
          name: AnkiTaiso-mac-${{ env.SHORT_SHA }}
          path: /tmp/release/mac/

      - name: 🦺 Upload Artifact Treemaps
        uses: actions/upload-artifact@v4
        with:
          name: AnkiTaiso-BundleSize-TreeMap-${{ env.SHORT_SHA }}
          path: /tmp/release/treemaps/
